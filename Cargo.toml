[package]
name = "nuitrack-rs"
version = "0.0.3"
edition = "2024"
authors = ["Joseph Gilby <josephgilbyiv@gmail.com>"]

description = "Rust bindings for the Nuitrack SDK, enabling skeletal tracking, gesture recognition, and other computer vision capabilities."
license = "MIT"

readme = "README.md"
repository = "https://github.com/JOSEPHGILBY/nuitrack-rs"
keywords = ["nuitrack", "sdk", "bindings", "skeletal-tracking", "gesture-recognition"]
categories = ["api-bindings", "asynchronous", "computer-vision", "multimedia", "science::robotics" ]
links = "nuitrack"

# include = [
#     "/src/**/*.rs",       # All your Rust source files
#     "/src/**/*.cc",       # All your C++ implementation files for the bridge
#     "/include/**/*.h",    # All your C++ header files for the bridge
#     "/build.rs",
#     "/Cargo.toml",
#     "/README.md",
#     "/LICENSE",           # Ensure this filename matches your actual license file
# ]

# exclude = [
#     "/vendor"
# ]

[workspace]
members = [
    ".",  # Represents the main nuitrack-rs library package itself (in the current directory).
    "examples/std-async",
    "examples/tokio-runtime-feature/basic", # Path to your example package.
    "validation_apps/test-concurrent-init"
]
default-members = ["."]

[lib]
name = "nuitrack_rs"

[dependencies]
cxx = "1.0"
thiserror = "2.0"
futures-core = "0.3"
futures-channel = "0.3"
pin-project-lite = "0.2"
tracing = "0.1"
blocking = "1"
tokio = { version = "1", features = ["sync", "time", "rt", "macros"], optional = true }
tokio-util = { version = "0.7", optional = true }
paste = "1.0"

[build-dependencies]
cxx-build = "1.0"
toml = "0.8"
anyhow = "1.0"

[features]
default = []
tokio_runtime = ["tokio", "tokio-util"]

[package.metadata.nuitrack]
sdk_version_tag = "v0.38"